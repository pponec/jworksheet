<?xml version="1.0" encoding="windows-1250"?>
<!-- 
*********************************************
* Author : PPone(c)2008
* Purpose: Create a ZIP archive
* Start  : "c:\jdk1.4\bin\java.exe" -jar "C:\Program Files\ant-1.5.1\lib\ant.jar" -verbose -buildfile archive.ant
*
* Build Description:
*    1) update "read-me.html"
*    2) modify parameters in bundle "Resource/build.properties"
*    3) run project JUnit tests
*    4) run ant default target of build_release.xml
*    5) copy file "dist/ujo.VERSION.zip" to internet
*
*********************************************
-->
<project name="archive-JavaProject" basedir="." default="public-build">
    <description>Create new BUILD.</description>

    <!-- Time stamp -->
    <tstamp/>

    <!-- Parrents, separated by "," character. -->
    <property name="include" value="*.*,src/**,nbproject/project*,test/**" />

    <!-- Parrents, separated by "," character. -->
    <property name="exclude" value=",**/.*,**/*.class*,**/*.rar,**/*.java~,*.log,build*.xml,**/*.svg,www/**,**/z_package*.html" />

    <!-- A root of the backuped directories -->
    <property name="root" value="${basedir}"/>

    <property file="Resource/build.properties"/>
    <import   file="build.xml"/>
    <property name="dist.zip" value="dist/jWorkSheet.${version}.zip" />    
    <property name="javadoc.preview" value="false" />
    <property name="jar.compress" value="true" />
    <property name="javac.debug" value="false"/>

    <!-- - - - - - - - - INFORMATION - - - - - - - - - - -->
    <echo message="  dist.zip : ${dist.zip}"/>
    <echo message="  os.name  : ${os.name}"  />
    <echo message="  basedir  : ${basedir}"  />
    <echo message="  user.dir : ${user.dir}" />
    <echo message="  ant.file : ${ant.file}" />
    <echo message="  java.home: ${java.home}"/>
    <echo message="  tstamp   : ${DSTAMP}.${TSTAMP} - ${TODAY}"/>
    <echo message="  root     : ${root}"/>
    
    <target name="public-build" depends="-public-build-A,-public-build-B" description="Create new archive.">
        <!-- Jméno zálohy. -->
        <echo message="Creating an builld archiv file: ${dist.zip}"/>
    </target>
    

    <target name="-public-build-A" depends="clean,jar,javadoc"  description="Create new archive.">
        <property name="install" value="build/INSTALL" />
        <property name="INSTALL" value="dist/INSTALL" />
        <mkdir dir="${install}/i" />
        <mkdir dir="${INSTALL}" />
        
        <copy file="Resource/_jworksheet.nsi" todir="${install}"/>
        <replaceregexp file="${install}/_jworksheet.nsi" 
                       match="\$\{VERSION\}"
                       replace="${version}"
                       flags="g"
                       encoding="UTF-8"
                       byline="true" />
                       
      <copy todir="${install}/i"><fileset dir="Resource/INSTALL"/></copy>
      <copy todir="${install}/i"><fileset dir="dist" includes="**/*.jar"/></copy>
      
      <exec dir="${install}" executable="${NSIS.exe}" os="Windows 2000;Windows XP" output="${install}/out.txt" failonerror="true" >
           <arg value="/Omake-jws.log"/>
           <arg value="/V1"/>
           <arg value="_jworksheet.nsi"/>
      </exec>
      <copy file  ="${install}/jWorkSheetSetup.exe" 
            tofile="${INSTALL}/jWorkSheetSetup.${version}.exe" />
      <copy file="Resource/jWorkSheet-LightSetup.exe" 
           tofile  ="${INSTALL}/jWorkSheetSetupLight.${version}.exe" />
      <zip destfile="${INSTALL}/jWorkSheetSetup.${version}.zip" 
           whenempty="create" 
           compress="true" 
           comment="jWorkSheet ${version}"
           > 
           <zipfileset 
               dir="${install}/i" 
               prefix=""
               includes="**/*"
               casesensitive="no"
           />
      </zip>
      
      
    </target>

    
    <target name="-public-build-B" depends="-public-build-A">
        <!-- replace in the html file -->
        <copy file="Resource/read-me.html" todir="build"/>
        <replaceregexp file="build/read-me.html" 
                       match="\$\{VERSION\}"
                       replace="${version}"
                       flags="g"
                       encoding="UTF-8"
                       byline="true" />
        <replaceregexp file="build/read-me.html" 
                       match="\$\{YEAR\}"
                       replace="${year}"
                       flags="g"
                       encoding="UTF-8"
                       byline="true" />
        <replaceregexp file="build/read-me.html" 
                       match="\$\{HOMEPAGE\}"
                       replace="${homePage}"
                       flags="g"
                       encoding="UTF-8"
                       byline="true" />

        <zip destfile="${dist.zip}" whenempty="create" compress="true" comment="UJO ${version}"> 
           <zipfileset 
              dir="${root}" 
              prefix="src"
              includes="${include}"
              excludes="${exclude}"
              casesensitive="no"
           />            
           
           <zipfileset 
              dir="dist" 
              prefix="bin"
              includes="*.jar"
              casesensitive="no"
           />            
           
           <zipfileset 
              dir="dist/javadoc" 
              prefix="javadoc"
              casesensitive="no"
           />            
           
           <zipfileset 
              dir="Resource" 
              prefix=""
              includes="*.txt"
              casesensitive="no"
           />            

           <zipfileset 
              dir="build" 
              prefix=""
              includes="*.html"
              casesensitive="no"
           />            
           
           
        </zip>



    </target>
    
    <target name="-post-jar" >
        <signjar  keystore="C:/u/Pavel/Java/Projects2/pponecKeyStore"
                  alias="pponecKey"
                  storepass="pponecKeyStorePwd" >
            <fileset dir="${dist.dir}" includes="**/*.jar" />
        </signjar>
    </target>
    
    <target name="build-signing" depends="clean,jar" description="Mage build and sign it">
    </target>    
    
    <target name="build-signing-javadoc" depends="clean,jar,javadoc">
    </target>     

    
</project>
